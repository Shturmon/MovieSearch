@model PagedList.IPagedList<Web.Models.MovieViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}
@section scripts {
    <script src="@Url.Content("~/Scripts/rating.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/MovieSearchAjax.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/rating.css")" rel="stylesheet" type="text/css" />
}
<h2>Movies</h2>
@Html.ActionLink("Clear all filters", "Index", new { sortOrder = "", currentTitle = "", currentGenre = "" }) <br />
<form method="get" id="searchForm" action="@Url.Action("Index")">
    Genre: @Html.DropDownList("genreTitle", ViewBag.CurrentGenre as string ?? "")
    Title: @Html.TextBox("MovieTitle", ViewBag.CurrentTitle as string)
    <br /><br />
    <input type="submit" value="Filter" />
</form>
@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    @Html.ActionLink("Create New", "CreateOrUpdate")
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", 
                new { 
                    sortOrder = ViewBag.TitleSortParm, 
                    currentTitle = ViewBag.CurrentTitle,
                    currentGenre = ViewBag.CurrentGenre
                })
        </th>
        <th>
            Director
        </th>
        <th>
            @Html.ActionLink("Premiere Date", "Index",
                new
                {
                    sortOrder = ViewBag.DateSortParm,
                    currentTitle = ViewBag.CurrentTitle,
                    currentGenre = ViewBag.CurrentGenre
                })
        </th>
        <th>
            Desctiption
        </th>
        <th>
            @Html.ActionLink("Rating", "Index",
                new
                {
                    sortOrder = ViewBag.RateSortParm,
                    currentTitle = ViewBag.CurrentTitle,
                    currentGenre = ViewBag.CurrentGenre
                })
        </th>
        <th>
            Country
        </th>
        <th>
            Poster
        </th>
        <th>
            Genres
        </th>
        <th>
            Actors
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Title, "Details", "Movie", new { id = item.Id }, new { @class = "col-md-10" })
            </td>
            <td>
                @{
                    foreach (var cast in item.CastAndCrews)
                    {
                        if (cast.PeopleId == item.DirectorId && cast.Career.Title == "Director")
                        {
                            @: @Html.ActionLink(cast.People.FullName, "Details", "People", new { id = cast.PeopleId }, null)
                        }
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PremiereDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Desctiption)
            </td>
            <td>
                @{
                    if (Double.IsNaN(item.Rating))
                    {
                        @:Nobody rate this movie yet
                            }
                    else
                    {
                        @Html.Encode(String.Format("{0:0.00}", item.Rating));
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country.Title)
            </td>
            <td>
                <img src="@string.Format("/Posters/{0}.jpg", item.Id)" id="poster" width="100" height="100" />
            </td>
            <td>
                @{
                    foreach (var genre in item.Genres)
                    {
                        @: @Html.ActionLink(genre.Title, "Details", "Genre", new { id = genre.Id }, null)
                    }
                }
            </td>
            <td>
                @{
                    foreach (var actor in item.CastAndCrews)
                    {
                        if (actor.Career.Title == "Actor")
                        {
                            @: @Html.ActionLink(actor.People.FullName, "Details", "People", new { id = actor.PeopleId }, null)
                        }
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.Id })

                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <a>
                        | @Html.ActionLink("Edit", "CreateOrUpdate", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </a>
                }
            </td>
        </tr>
    }
</table>

<div id="dialog"></div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort,
          currentTitle = ViewBag.CurrentTitle, currentGenre = ViewBag.CurrentGenre } ))
